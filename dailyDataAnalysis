#Plotting the graph for total cases daily
import matplotlib.pyplot as plt
import pandas as pd
import tkinter as tk
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

window= tk.Tk() 
window.minsize(800,800)
window.title('IP Project 2020')

plt.style.use("cyberpunk")


frame1 = tk.Frame()
frame1.pack()


def showAll():
    frame2 = tk.Frame(relief=tk.GROOVE, borderwidth=15)
    frame2.place(relx=.5, rely=.5, anchor='c', height=600, width=600)
    figure1 = plt.Figure(figsize=(6,6), dpi=100)
    ax1 = figure1.add_subplot(111)
    line1 = FigureCanvasTkAgg(figure1, frame2)
    line1.get_tk_widget().pack(fill=tk.BOTH)
   # line1.get_tk_widget().pack(side=tk.LEFT, fill=tk.BOTH)
    dataFrame.plot(kind='line', x='reportDate', y='confirmed', color='magenta',ax=ax1)
    dataFrame.plot(kind='line', x='reportDate', y='recovered', color='cyan',ax=ax1)
    dataFrame.plot(kind='line', x='reportDate', y='deceased', color= 'yellow',ax=ax1)
    ax1.set_title('Covid-19 Trends in MH')
    ax1.set_xlabel('Date')   
    ax1.set_ylabel('Count of Cases')   
    ax1.legend(loc='best')   

def showConfirmed():
    frame2 = tk.Frame(relief=tk.GROOVE, borderwidth=15)
    frame2.place(relx=.5, rely=.5, anchor='c', height=600, width=600)
    figure1 = plt.Figure(figsize=(6,6), dpi=100)
    ax1 = figure1.add_subplot(111)
    line1 = FigureCanvasTkAgg(figure1, frame2)
    line1.get_tk_widget().pack(fill=tk.BOTH)
    dataFrame.plot(kind='line', x='reportDate', y='confirmed', color= 'magenta',ax=ax1)
    ax1.set_title('Covid-19 Confirmed Cases Trends in MH')
    ax1.set_xlabel('Date')   
    ax1.set_ylabel('Count of Cases')   
    ax1.legend(loc='best')   

def showRecovered():
    frame2 = tk.Frame(relief=tk.GROOVE, borderwidth=15)
    frame2.place(relx=.5, rely=.5, anchor='c', height=600, width=600)
    figure1 = plt.Figure(figsize=(6,6), dpi=100)
    ax1 = figure1.add_subplot(111)
    line1 = FigureCanvasTkAgg(figure1, frame2)
    line1.get_tk_widget().pack(fill=tk.BOTH)
    dataFrame.plot(kind='line', x='reportDate', y='recovered', color= 'cyan',ax=ax1)
    ax1.set_title('Covid-19 Recovery Trends in MH')
    ax1.set_xlabel('Date')   
    ax1.set_ylabel('Count of Cases')   
    ax1.legend(loc='best')   

def showDeceased():
    frame2 = tk.Frame(relief=tk.GROOVE, borderwidth=15)
    frame2.place(relx=.5, rely=.5, anchor='c', height=600, width=600)
    figure1 = plt.Figure(figsize=(6,6), dpi=100)
    ax1 = figure1.add_subplot(111)
    line1 = FigureCanvasTkAgg(figure1, frame2)
    line1.get_tk_widget().pack(fill=tk.BOTH)
    dataFrame.plot(kind='line', x='reportDate', y='deceased', color= 'yellow',ax=ax1)
    ax1.set_title('Covid-19 Deceased Trends in MH')
    ax1.set_xlabel('Date')   
    ax1.set_ylabel('Count of Cases')   
    ax1.legend(loc='best')   

btnAll = tk.Button(frame1, text="All", width=10, command=showAll).grid(column=1, row=1)

btnConfirmed = tk.Button(frame1, text="Confirmed", width=10, command=showConfirmed).grid(column=2, row=1)

btnRecovered = tk.Button(frame1, text="Recovered", width=10, command=showRecovered).grid(column=3, row=1)

btnDeceased = tk.Button(frame1, text="Deceased", width=10, command=showDeceased).grid(column=4, row=1)

btnExit = tk.Button(frame1, text="Exit", width=10, command=window.destroy).grid(column=5, row=1)

# Add glow effects-Optional
#mplcyberpunk.add_glow_effects()

for child in frame1.winfo_children(): 
    child.grid_configure(padx=5, pady=25)
    
window.mainloop()
